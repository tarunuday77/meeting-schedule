import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { SFNServiceException as __BaseException } from "./SFNServiceException";
export class ActivityDoesNotExist extends __BaseException {
    constructor(opts) {
        super({
            name: "ActivityDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "ActivityDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActivityDoesNotExist.prototype);
    }
}
export class ActivityLimitExceeded extends __BaseException {
    constructor(opts) {
        super({
            name: "ActivityLimitExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "ActivityLimitExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActivityLimitExceeded.prototype);
    }
}
export class ActivityWorkerLimitExceeded extends __BaseException {
    constructor(opts) {
        super({
            name: "ActivityWorkerLimitExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "ActivityWorkerLimitExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActivityWorkerLimitExceeded.prototype);
    }
}
export class InvalidName extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidName",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidName";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidName.prototype);
    }
}
export class TooManyTags extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTags",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTags";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTags.prototype);
        this.resourceName = opts.resourceName;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export const LogLevel = {
    ALL: "ALL",
    ERROR: "ERROR",
    FATAL: "FATAL",
    OFF: "OFF",
};
export const StateMachineType = {
    EXPRESS: "EXPRESS",
    STANDARD: "STANDARD",
};
export class InvalidArn extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidArn",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArn";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArn.prototype);
    }
}
export class InvalidDefinition extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidDefinition",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDefinition";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDefinition.prototype);
    }
}
export class InvalidLoggingConfiguration extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidLoggingConfiguration",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLoggingConfiguration";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLoggingConfiguration.prototype);
    }
}
export class InvalidTracingConfiguration extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTracingConfiguration",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTracingConfiguration";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTracingConfiguration.prototype);
    }
}
export class StateMachineAlreadyExists extends __BaseException {
    constructor(opts) {
        super({
            name: "StateMachineAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "StateMachineAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, StateMachineAlreadyExists.prototype);
    }
}
export class StateMachineDeleting extends __BaseException {
    constructor(opts) {
        super({
            name: "StateMachineDeleting",
            $fault: "client",
            ...opts,
        });
        this.name = "StateMachineDeleting";
        this.$fault = "client";
        Object.setPrototypeOf(this, StateMachineDeleting.prototype);
    }
}
export class StateMachineLimitExceeded extends __BaseException {
    constructor(opts) {
        super({
            name: "StateMachineLimitExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "StateMachineLimitExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, StateMachineLimitExceeded.prototype);
    }
}
export class StateMachineTypeNotSupported extends __BaseException {
    constructor(opts) {
        super({
            name: "StateMachineTypeNotSupported",
            $fault: "client",
            ...opts,
        });
        this.name = "StateMachineTypeNotSupported";
        this.$fault = "client";
        Object.setPrototypeOf(this, StateMachineTypeNotSupported.prototype);
    }
}
export const ValidationExceptionReason = {
    API_DOES_NOT_SUPPORT_LABELED_ARNS: "API_DOES_NOT_SUPPORT_LABELED_ARNS",
    CANNOT_UPDATE_COMPLETED_MAP_RUN: "CANNOT_UPDATE_COMPLETED_MAP_RUN",
    INVALID_ROUTING_CONFIGURATION: "INVALID_ROUTING_CONFIGURATION",
    MISSING_REQUIRED_PARAMETER: "MISSING_REQUIRED_PARAMETER",
};
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.reason = opts.reason;
    }
}
export class ResourceNotFound extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFound.prototype);
        this.resourceName = opts.resourceName;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
export const ExecutionRedriveStatus = {
    NOT_REDRIVABLE: "NOT_REDRIVABLE",
    REDRIVABLE: "REDRIVABLE",
    REDRIVABLE_BY_MAP_RUN: "REDRIVABLE_BY_MAP_RUN",
};
export const ExecutionStatus = {
    ABORTED: "ABORTED",
    FAILED: "FAILED",
    PENDING_REDRIVE: "PENDING_REDRIVE",
    RUNNING: "RUNNING",
    SUCCEEDED: "SUCCEEDED",
    TIMED_OUT: "TIMED_OUT",
};
export class ExecutionDoesNotExist extends __BaseException {
    constructor(opts) {
        super({
            name: "ExecutionDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "ExecutionDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExecutionDoesNotExist.prototype);
    }
}
export const MapRunStatus = {
    ABORTED: "ABORTED",
    FAILED: "FAILED",
    RUNNING: "RUNNING",
    SUCCEEDED: "SUCCEEDED",
};
export const StateMachineStatus = {
    ACTIVE: "ACTIVE",
    DELETING: "DELETING",
};
export class StateMachineDoesNotExist extends __BaseException {
    constructor(opts) {
        super({
            name: "StateMachineDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "StateMachineDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, StateMachineDoesNotExist.prototype);
    }
}
export const HistoryEventType = {
    ActivityFailed: "ActivityFailed",
    ActivityScheduleFailed: "ActivityScheduleFailed",
    ActivityScheduled: "ActivityScheduled",
    ActivityStarted: "ActivityStarted",
    ActivitySucceeded: "ActivitySucceeded",
    ActivityTimedOut: "ActivityTimedOut",
    ChoiceStateEntered: "ChoiceStateEntered",
    ChoiceStateExited: "ChoiceStateExited",
    ExecutionAborted: "ExecutionAborted",
    ExecutionFailed: "ExecutionFailed",
    ExecutionRedriven: "ExecutionRedriven",
    ExecutionStarted: "ExecutionStarted",
    ExecutionSucceeded: "ExecutionSucceeded",
    ExecutionTimedOut: "ExecutionTimedOut",
    FailStateEntered: "FailStateEntered",
    LambdaFunctionFailed: "LambdaFunctionFailed",
    LambdaFunctionScheduleFailed: "LambdaFunctionScheduleFailed",
    LambdaFunctionScheduled: "LambdaFunctionScheduled",
    LambdaFunctionStartFailed: "LambdaFunctionStartFailed",
    LambdaFunctionStarted: "LambdaFunctionStarted",
    LambdaFunctionSucceeded: "LambdaFunctionSucceeded",
    LambdaFunctionTimedOut: "LambdaFunctionTimedOut",
    MapIterationAborted: "MapIterationAborted",
    MapIterationFailed: "MapIterationFailed",
    MapIterationStarted: "MapIterationStarted",
    MapIterationSucceeded: "MapIterationSucceeded",
    MapRunAborted: "MapRunAborted",
    MapRunFailed: "MapRunFailed",
    MapRunRedriven: "MapRunRedriven",
    MapRunStarted: "MapRunStarted",
    MapRunSucceeded: "MapRunSucceeded",
    MapStateAborted: "MapStateAborted",
    MapStateEntered: "MapStateEntered",
    MapStateExited: "MapStateExited",
    MapStateFailed: "MapStateFailed",
    MapStateStarted: "MapStateStarted",
    MapStateSucceeded: "MapStateSucceeded",
    ParallelStateAborted: "ParallelStateAborted",
    ParallelStateEntered: "ParallelStateEntered",
    ParallelStateExited: "ParallelStateExited",
    ParallelStateFailed: "ParallelStateFailed",
    ParallelStateStarted: "ParallelStateStarted",
    ParallelStateSucceeded: "ParallelStateSucceeded",
    PassStateEntered: "PassStateEntered",
    PassStateExited: "PassStateExited",
    SucceedStateEntered: "SucceedStateEntered",
    SucceedStateExited: "SucceedStateExited",
    TaskFailed: "TaskFailed",
    TaskScheduled: "TaskScheduled",
    TaskStartFailed: "TaskStartFailed",
    TaskStarted: "TaskStarted",
    TaskStateAborted: "TaskStateAborted",
    TaskStateEntered: "TaskStateEntered",
    TaskStateExited: "TaskStateExited",
    TaskSubmitFailed: "TaskSubmitFailed",
    TaskSubmitted: "TaskSubmitted",
    TaskSucceeded: "TaskSucceeded",
    TaskTimedOut: "TaskTimedOut",
    WaitStateAborted: "WaitStateAborted",
    WaitStateEntered: "WaitStateEntered",
    WaitStateExited: "WaitStateExited",
};
export class InvalidToken extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidToken",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidToken";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidToken.prototype);
    }
}
export const ExecutionRedriveFilter = {
    NOT_REDRIVEN: "NOT_REDRIVEN",
    REDRIVEN: "REDRIVEN",
};
export class ExecutionLimitExceeded extends __BaseException {
    constructor(opts) {
        super({
            name: "ExecutionLimitExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "ExecutionLimitExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExecutionLimitExceeded.prototype);
    }
}
export class ExecutionNotRedrivable extends __BaseException {
    constructor(opts) {
        super({
            name: "ExecutionNotRedrivable",
            $fault: "client",
            ...opts,
        });
        this.name = "ExecutionNotRedrivable";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExecutionNotRedrivable.prototype);
    }
}
export class TaskDoesNotExist extends __BaseException {
    constructor(opts) {
        super({
            name: "TaskDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "TaskDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, TaskDoesNotExist.prototype);
    }
}
export class TaskTimedOut extends __BaseException {
    constructor(opts) {
        super({
            name: "TaskTimedOut",
            $fault: "client",
            ...opts,
        });
        this.name = "TaskTimedOut";
        this.$fault = "client";
        Object.setPrototypeOf(this, TaskTimedOut.prototype);
    }
}
export class InvalidOutput extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidOutput",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOutput";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOutput.prototype);
    }
}
export class ExecutionAlreadyExists extends __BaseException {
    constructor(opts) {
        super({
            name: "ExecutionAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "ExecutionAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExecutionAlreadyExists.prototype);
    }
}
export class InvalidExecutionInput extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidExecutionInput",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidExecutionInput";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidExecutionInput.prototype);
    }
}
export const SyncExecutionStatus = {
    FAILED: "FAILED",
    SUCCEEDED: "SUCCEEDED",
    TIMED_OUT: "TIMED_OUT",
};
export const InspectionLevel = {
    DEBUG: "DEBUG",
    INFO: "INFO",
    TRACE: "TRACE",
};
export const TestExecutionStatus = {
    CAUGHT_ERROR: "CAUGHT_ERROR",
    FAILED: "FAILED",
    RETRIABLE: "RETRIABLE",
    SUCCEEDED: "SUCCEEDED",
};
export class MissingRequiredParameter extends __BaseException {
    constructor(opts) {
        super({
            name: "MissingRequiredParameter",
            $fault: "client",
            ...opts,
        });
        this.name = "MissingRequiredParameter";
        this.$fault = "client";
        Object.setPrototypeOf(this, MissingRequiredParameter.prototype);
    }
}
export const ActivityFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const ActivityScheduledEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const ActivityScheduleFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const ActivitySucceededEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const ActivityTimedOutEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const CreateStateMachineInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
    ...(obj.versionDescription && { versionDescription: SENSITIVE_STRING }),
});
export const CreateStateMachineAliasInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const DescribeExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
    ...(obj.output && { output: SENSITIVE_STRING }),
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
    ...(obj.redriveStatusReason && { redriveStatusReason: SENSITIVE_STRING }),
});
export const DescribeStateMachineOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const DescribeStateMachineAliasOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const DescribeStateMachineForExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
});
export const GetActivityTaskOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const ExecutionAbortedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const ExecutionFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const ExecutionStartedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const ExecutionSucceededEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const ExecutionTimedOutEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const LambdaFunctionFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const LambdaFunctionScheduledEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const LambdaFunctionScheduleFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const LambdaFunctionStartFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const LambdaFunctionSucceededEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const LambdaFunctionTimedOutEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const MapRunFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const StateEnteredEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const StateExitedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const TaskFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const TaskScheduledEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.parameters && { parameters: SENSITIVE_STRING }),
});
export const TaskStartFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const TaskSubmitFailedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const TaskSubmittedEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const TaskSucceededEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const TaskTimedOutEventDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const HistoryEventFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.activityFailedEventDetails && {
        activityFailedEventDetails: ActivityFailedEventDetailsFilterSensitiveLog(obj.activityFailedEventDetails),
    }),
    ...(obj.activityScheduleFailedEventDetails && {
        activityScheduleFailedEventDetails: ActivityScheduleFailedEventDetailsFilterSensitiveLog(obj.activityScheduleFailedEventDetails),
    }),
    ...(obj.activityScheduledEventDetails && {
        activityScheduledEventDetails: ActivityScheduledEventDetailsFilterSensitiveLog(obj.activityScheduledEventDetails),
    }),
    ...(obj.activitySucceededEventDetails && {
        activitySucceededEventDetails: ActivitySucceededEventDetailsFilterSensitiveLog(obj.activitySucceededEventDetails),
    }),
    ...(obj.activityTimedOutEventDetails && {
        activityTimedOutEventDetails: ActivityTimedOutEventDetailsFilterSensitiveLog(obj.activityTimedOutEventDetails),
    }),
    ...(obj.taskFailedEventDetails && {
        taskFailedEventDetails: TaskFailedEventDetailsFilterSensitiveLog(obj.taskFailedEventDetails),
    }),
    ...(obj.taskScheduledEventDetails && {
        taskScheduledEventDetails: TaskScheduledEventDetailsFilterSensitiveLog(obj.taskScheduledEventDetails),
    }),
    ...(obj.taskStartFailedEventDetails && {
        taskStartFailedEventDetails: TaskStartFailedEventDetailsFilterSensitiveLog(obj.taskStartFailedEventDetails),
    }),
    ...(obj.taskSubmitFailedEventDetails && {
        taskSubmitFailedEventDetails: TaskSubmitFailedEventDetailsFilterSensitiveLog(obj.taskSubmitFailedEventDetails),
    }),
    ...(obj.taskSubmittedEventDetails && {
        taskSubmittedEventDetails: TaskSubmittedEventDetailsFilterSensitiveLog(obj.taskSubmittedEventDetails),
    }),
    ...(obj.taskSucceededEventDetails && {
        taskSucceededEventDetails: TaskSucceededEventDetailsFilterSensitiveLog(obj.taskSucceededEventDetails),
    }),
    ...(obj.taskTimedOutEventDetails && {
        taskTimedOutEventDetails: TaskTimedOutEventDetailsFilterSensitiveLog(obj.taskTimedOutEventDetails),
    }),
    ...(obj.executionFailedEventDetails && {
        executionFailedEventDetails: ExecutionFailedEventDetailsFilterSensitiveLog(obj.executionFailedEventDetails),
    }),
    ...(obj.executionStartedEventDetails && {
        executionStartedEventDetails: ExecutionStartedEventDetailsFilterSensitiveLog(obj.executionStartedEventDetails),
    }),
    ...(obj.executionSucceededEventDetails && {
        executionSucceededEventDetails: ExecutionSucceededEventDetailsFilterSensitiveLog(obj.executionSucceededEventDetails),
    }),
    ...(obj.executionAbortedEventDetails && {
        executionAbortedEventDetails: ExecutionAbortedEventDetailsFilterSensitiveLog(obj.executionAbortedEventDetails),
    }),
    ...(obj.executionTimedOutEventDetails && {
        executionTimedOutEventDetails: ExecutionTimedOutEventDetailsFilterSensitiveLog(obj.executionTimedOutEventDetails),
    }),
    ...(obj.lambdaFunctionFailedEventDetails && {
        lambdaFunctionFailedEventDetails: LambdaFunctionFailedEventDetailsFilterSensitiveLog(obj.lambdaFunctionFailedEventDetails),
    }),
    ...(obj.lambdaFunctionScheduleFailedEventDetails && {
        lambdaFunctionScheduleFailedEventDetails: LambdaFunctionScheduleFailedEventDetailsFilterSensitiveLog(obj.lambdaFunctionScheduleFailedEventDetails),
    }),
    ...(obj.lambdaFunctionScheduledEventDetails && {
        lambdaFunctionScheduledEventDetails: LambdaFunctionScheduledEventDetailsFilterSensitiveLog(obj.lambdaFunctionScheduledEventDetails),
    }),
    ...(obj.lambdaFunctionStartFailedEventDetails && {
        lambdaFunctionStartFailedEventDetails: LambdaFunctionStartFailedEventDetailsFilterSensitiveLog(obj.lambdaFunctionStartFailedEventDetails),
    }),
    ...(obj.lambdaFunctionSucceededEventDetails && {
        lambdaFunctionSucceededEventDetails: LambdaFunctionSucceededEventDetailsFilterSensitiveLog(obj.lambdaFunctionSucceededEventDetails),
    }),
    ...(obj.lambdaFunctionTimedOutEventDetails && {
        lambdaFunctionTimedOutEventDetails: LambdaFunctionTimedOutEventDetailsFilterSensitiveLog(obj.lambdaFunctionTimedOutEventDetails),
    }),
    ...(obj.stateEnteredEventDetails && {
        stateEnteredEventDetails: StateEnteredEventDetailsFilterSensitiveLog(obj.stateEnteredEventDetails),
    }),
    ...(obj.stateExitedEventDetails && {
        stateExitedEventDetails: StateExitedEventDetailsFilterSensitiveLog(obj.stateExitedEventDetails),
    }),
    ...(obj.mapRunFailedEventDetails && {
        mapRunFailedEventDetails: MapRunFailedEventDetailsFilterSensitiveLog(obj.mapRunFailedEventDetails),
    }),
});
export const GetExecutionHistoryOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.events && { events: obj.events.map((item) => HistoryEventFilterSensitiveLog(item)) }),
});
export const PublishStateMachineVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const SendTaskFailureInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const SendTaskSuccessInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const StartExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const StartSyncExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const StartSyncExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
    ...(obj.input && { input: SENSITIVE_STRING }),
    ...(obj.output && { output: SENSITIVE_STRING }),
});
export const StopExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
});
export const TestStateInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
    ...(obj.input && { input: SENSITIVE_STRING }),
});
export const InspectionDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.input && { input: SENSITIVE_STRING }),
    ...(obj.afterInputPath && { afterInputPath: SENSITIVE_STRING }),
    ...(obj.afterParameters && { afterParameters: SENSITIVE_STRING }),
    ...(obj.result && { result: SENSITIVE_STRING }),
    ...(obj.afterResultSelector && { afterResultSelector: SENSITIVE_STRING }),
    ...(obj.afterResultPath && { afterResultPath: SENSITIVE_STRING }),
});
export const TestStateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.output && { output: SENSITIVE_STRING }),
    ...(obj.error && { error: SENSITIVE_STRING }),
    ...(obj.cause && { cause: SENSITIVE_STRING }),
    ...(obj.inspectionData && { inspectionData: SENSITIVE_STRING }),
});
export const UpdateStateMachineInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.definition && { definition: SENSITIVE_STRING }),
    ...(obj.versionDescription && { versionDescription: SENSITIVE_STRING }),
});
export const UpdateStateMachineAliasInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
